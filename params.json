{
  "name": "Fermenter",
  "tagline": "scala/playframework app to monitor and control a homebrew fermentation chamber",
  "body": "### Welcome\r\nI am an avid home-brewer of beer and as one gains experience in this hobby, he quickly learns of the importance of temperature control to prevent off-flavors and basically optimize the environment so that the yeast does its job and is not stressed, which can impart off-flavors into the beer.  I am also a professional software engineer with an interest in learning Scala, PlayFramework, and Akka.\r\n\r\nSo the \"big idea\" here is to place the carboy containing the fermenting wort into a cooler filled with water.  Next, I want to add a small water pump to circulate the water through a \"water block\" as is used in overclocking computers.  Attached to the outside of the water block will be one (or more) thermo-electric cooler (TEC) that I can control.  It should be possible to use the same TEC devices to alternatively heat the water as well, but that's an experiment for a future iteration.\r\n\r\nHere is the hardware list so far:\r\n* Raspberry Pi 3b - I'm comfortable with Linux and it has Java 8 already installed, so Scala should run just fine.\r\n* an MCP3008 SPI A/D converter and TMP36 analog temp sensor for measuring ambient temp.\r\n* a DS18B20 waterproof digital temperature probe for measuring the temp inside the cooler\r\n* an aluminum waterblock and plastic tubing from amazon\r\n* several 12V TEC devices and aluminum heatsinks\r\n* several N-channel power MOSFET transitors (30V / 60A) to drive the TECs\r\n* a 120VAC to 12VDC power supply\r\n* one 5V 1.5A Linear Voltage Regulator - 7805 TO-220 to run the Pi from the 12V supply\r\n* a breadboard and Pi Cobbler for easy experimentation\r\n\r\nFor the UI, I'm envisioning a single-page webapp.  Angular2 is getting a lot of buzz, but attempting to integrate it into my sbt build process is so far very frustrating, so I may choose something else.  So I've put that on the back burner for now and just concentrated on building a very simple REST service to return JSON data to a future front-end.  More features are planned, of course.  I would like the front-end to display current temperatures and a plot of temps over the duration of the current fermentation run (2+ weeks).  Also, I want to be able to program my device to hold the fermentation chamber at a set temperature as well as vary it over time, depending on the needs of what I'm brewing.  This means adding PID functionality similar to the RasPiBrew project which has inspired much of what I'm doing.\r\n\r\nBut the point here is to build something of my own, learning a lot along the way about interfacing the Pi with electronic components as well as the Scala/Play/Akka stuff on the software side.  Should be a fun experiment.  This may not work at all, may be impractical, etc. but that's not the objective.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}